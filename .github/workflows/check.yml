
name: check

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test:

    defaults:
      run:
        shell: bash
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.12']
        python-arch: [x64]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}-${{ matrix.python-arch }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        architecture: ${{ matrix.python-arch }}

    - name: Install Poetry
      uses: snok/install-poetry@v1

    - name: Initialize Submodules
      run: |
        git submodule update --init --recursive

    - name: Install Mesa Linux
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install xvfb libglu1-mesa-dev freeglut3-dev mesa-common-dev

    - name: Install Mesa Windows
      if: runner.os == 'Windows'
      uses: ssciwr/setup-mesa-dist-win@v2

    - name: Add msbuild to PATH
      if: runner.os == 'Windows'
      uses: microsoft/setup-msbuild@v2

    #- name: Build SDL3 Windows
    #  working-directory: vendor/SDL
    #  if: runner.os == 'Windows'
    #  shell: pwsh
    #  run: |
    #    cmake . -D CMAKE_SYSTEM_VERSION=10.0.26100.0
    #    msbuild SDL3-shared.vcxproj /p:Configuration=Release
    #    cp Release/SDL3.dll ../../SDL3.dll

    - name: Install
      run: |
        poetry install
      env:
        EPLATFORM_BUILD_WITH_COVERAGE: ${{ matrix.os == 'windows-latest' && '0' || '1' }}

    - name: Test
      if: runner.os != 'Linux'
      run: |
        poetry run python .github/info.py
        poetry run pytest --cov=eplatform --cov-report=xml
      env:
        LIBGL_ALWAYS_SOFTWARE: "true"

    - name: Test with Xvfb
      if: runner.os == 'Linux'
      run: |
        xvfb-run -a poetry run python .github/info.py
        xvfb-run -a poetry run pytest --cov=eplatform --cov-report=xml
      env:
        LIBGL_ALWAYS_SOFTWARE: "true"

    - name: Codecov
      uses: codecov/codecov-action@v2


  static-analysis:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.12
        architecture: x64

    - name: Upgrade pip & setuptools
      run: |
        python -m pip install --upgrade pip
        python -m pip install --upgrade setuptools

    - name: Install Pre-Commit
      run: |
        python -m pip install pre-commit

    - name: Static Analysis
      run: |
        python -m pre_commit run --all-files

