
name: release

on:
  push:
    branches:
      - main
  pull_request:
  release:
    types: [created]

permissions:
  contents: write

jobs:
  build:

    defaults:
      run:
        shell: bash

    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-13, macos-14]

    steps:
    - uses: actions/checkout@v2

    - name: Initialize Submodules
      run: |
        git submodule update --init --recursive

    - name: Setup MSVC
      if: runner.os == 'Windows'
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: ${{ matrix.arch }}

    - name: Build Wheels
      uses: pypa/cibuildwheel@v3.0.0

    - name: Upload Github Wheel Release Artifact
      if: github.event_name == 'release'
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: ./wheelhouse/*.whl
        file_glob: true
        tag: ${{ github.ref }}

    - name: Upload Wheels to PyPi
      if: github.event_name == 'release'
      run: |
        pipx run twine upload wheelhouse/* --skip-existing
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}

    - name: Build Source
      if: runner.os == 'Linux'
      run: |
        pipx install build
        pipx run build --sdist

    - name: Upload Github Wheel Source Artifact
      if: runner.os == 'Linux' && github.event_name == 'release'
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: ./dist/*.tar.gz
        file_glob: true
        tag: ${{ github.ref }}

    - name: Upload Source to PyPi
      if: runner.os == 'Linux' && github.event_name == 'release'
      run: |
        pipx run twine upload dist/* --skip-existing
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
